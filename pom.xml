<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.helyx.kafka</groupId>
	<artifactId>bitcoin-price-kafka-producer</artifactId>
	<version>0.1.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Bitcoin Price Kafka Producer</name>
	<url>http://github.com/akinsella/bitcoin-price-kafka-producer</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>akinsella</id>
			<name>Alexis Kinsella</name>
			<email>akinsella@helyx.org</email>
			<url>https://twitter.com/alexiskinsella</url>
			<organization>Helyx.org</organization>
			<organizationUrl>http://blog.helyx.org</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>Europe/Paris</timezone>
			<properties>
				<picUrl>http://www.gravatar.com/userimage/775727/c81096a8e0acbd605d593f2727236129.jpg?size=256</picUrl>
			</properties>
		</developer>
	</developers>

	<organization>
		<name>Helyx.org</name>
		<url>http://blog.helyx.org</url>
	</organization>

	<scm>
		<connection>scm:git:https://github.com/akinsella/bitcoin-price-kafka-producer</connection>
		<developerConnection>scm:git:https://github.com/akinsella/bitcoin-price-kafka-producer</developerConnection>
		<url>http://github.com/akinsella/bitcoin-price-kafka-producer</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/akinsella/bitcoin-price-kafka-producer/issues</url>
	</issueManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<scala_compat.version>2.11</scala_compat.version>
		<scala.version>2.11.8</scala.version>
		<akka.version>2.5.9</akka.version>
		<akka-http.version>10.0.11</akka-http.version>
		<scopt.version>3.7.0</scopt.version>
		<kafka.version>1.0.0</kafka.version>
		<scalatest.version>3.0.4</scalatest.version>
		<jackson.version>2.9.2</jackson.version>
		<logback.version>1.2.3</logback.version>
		<typesafe-config.version>1.3.2</typesafe-config.version>
		<kafka-testing.version>0.2</kafka-testing.version>
		<avro.version>1.8.1</avro.version>
		<kafka-avro-serializer.version>3.2.1</kafka-avro-serializer.version>

		<maven-surefire-plugin.version>2.7</maven-surefire-plugin.version>
		<maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
		<scala-maven-plugin.version>3.2.2</scala-maven-plugin.version>
		<dockerfile-maven-plugin.version>1.3.7</dockerfile-maven-plugin.version>
		<scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_${scala_compat.version}</artifactId>
			<version>${kafka.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jmxri</artifactId>
					<groupId>com.sun.jmx</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jmxtools</artifactId>
					<groupId>com.sun.jdmk</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jms</artifactId>
					<groupId>javax.jms</groupId>
				</exclusion>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-slf4j_${scala_compat.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_${scala_compat.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http_${scala_compat.version}</artifactId>
			<version>${akka-http.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-stream_${scala_compat.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>${typesafe-config.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.scopt/scopt -->
		<dependency>
			<groupId>com.github.scopt</groupId>
			<artifactId>scopt_${scala_compat.version}</artifactId>
			<version>${scopt.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-scala_${scala_compat.version}</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
			<version>${kafka-avro-serializer.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala_compat.version}</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-testkit_${scala_compat.version}</artifactId>
			<version>${akka.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-testkit_${scala_compat.version}</artifactId>
			<version>${akka-http.version}</version>
			<scope>test</scope>
		</dependency>

		<!--
			<dependency>
				<groupId>com.landoop</groupId>
				<artifactId>kafka-testing_${scala_compat.version}</artifactId>
				<version>${kafka-testing.version}</version>
				<scope>test</scope>
			</dependency>
        -->
	</dependencies>

	<build>

		<finalName>${project.artifactId}-${project.version}</finalName>

		<plugins>

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>${scala-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>shaded</shadedClassifierName>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
							</artifactSet>
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.helyx.kafka.BitcoinPriceKafkaProducerMain</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<repository>registry.helyx.io:4999/bitcoin-price-kafka-producer</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}-shaded.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>${scalatest-maven-plugin.version}</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
